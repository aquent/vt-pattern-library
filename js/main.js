!function(){"use strict";var e="866px";class t{constructor(e,t=!1){this.generateOverlay=t,this.navbar=document.querySelector(e),this.navbarId=e.replace(".","#"),this.menus=this.navbar?this.navbar.querySelectorAll("details"):null,this.navOverlay=document.createElement("div"),this.navOverlay.classList.add("nav-overlay"),this.navLogo=document.querySelector(".top-nav__logo"),this.mobileView}handleNonMenuClick=t=>{const n="(max-width: "+e+")";this.mobileView=window.matchMedia(n),this.navbar&&this.navbar!==t.target&&!this.navbar.contains(t.target)&&this.menus.forEach((e=>{e.open&&e.removeAttribute("open")})),this.mobileView.matches||1!=this.generateOverlay||(this.navOverlay.remove(),document.body.classList.remove("no-scroll"))};handleEscapeKey=e=>{"Escape"==e.key&&this.menus.forEach((e=>{e.open&&e.removeAttribute("open"),1==this.generateOverlay&&(this.navOverlay.remove(),document.body.classList.remove("no-scroll"))}))};asyncDropdown=()=>{this.navbar&&(this.menus.forEach(((e,t,n)=>{e.ontoggle=t=>{e.open&&n.forEach((t=>{t!=e&&(t.removeAttribute("open"),1==this.generateOverlay&&(this.navLogo.insertAdjacentElement("afterend",this.navOverlay),document.body.classList.add("no-scroll")))}))}})),document.addEventListener("pointerdown",this.handleNonMenuClick),document.addEventListener("keydown",this.handleEscapeKey),window.addEventListener("hashchange",this.handleScrollAndOverlay))};handleScrollAndOverlay=e=>e.newURL.includes(this.navbarId)?(document.body.classList.add("no-scroll"),void this.navLogo.insertAdjacentElement("afterend",this.navOverlay)):(document.body.classList.remove("no-scroll"),void(this.navOverlay&&this.navOverlay.remove()))}class n{constructor(e){this.contentSlider=e;let t=e.dataset.controlSurface?e.dataset.controlSurface:"content-slider__cards-list";this.controlSurface=e.querySelector(`.${t}`);try{this.contentSliderCardsList=this.contentSlider.querySelector(".content-slider__cards-list"),this.firstCard=this.contentSliderCardsList.querySelector(".content-slider__block"),this.contentSliderControls=this.contentSlider.querySelector(".content-slider__controls"),this.controlsLeft=this.contentSliderControls.querySelector(".content-slider__controls-left"),this.controlsRight=this.contentSliderControls.querySelector(".content-slider__controls-right"),this.attachEventListeners();let e=this.contentSliderControls.offsetTop;this.setControlSurface(),this.contentSliderControls.style.top=this.controlSurface.offsetTop-e+"px"}catch(e){console.error("[ContentSlider] There was a problem calculating the controls for the content slider: ",e)}}setControlSurface(){const e=this.controlSurface.getBoundingClientRect();this.contentSliderControls.style.height=`${e.height}px`,this.sliderStep=this.firstCard.offsetWidth}attachEventListeners(){this.controlsLeft.addEventListener("click",(e=>{e.preventDefault(),this.contentSliderCardsList.scrollLeft-=this.sliderStep})),this.controlsRight.addEventListener("click",(e=>{e.preventDefault(),this.contentSliderCardsList.scrollLeft+=this.sliderStep})),window.addEventListener("resize",(()=>{this.setControlSurface()}))}}class s{constructor(e,t){this.wrapper=document.querySelector(e),this.controller=document.querySelector(t),this.wrapper&&this.controller&&(this.video=this.wrapper.getElementsByTagName("video")[0],this.#e(),this.#t())}#e(){this.wrapper.addEventListener("click",(()=>{this.video.paused?(this.controller.checked=!1,this.video.play()):(this.controller.checked=!0,this.video.pause())}))}#t(){const t="(min-width: "+e+")";this.desktopView=window.matchMedia(t),this.desktopView.matches&&this.video.setAttribute("autoplay",!0)}}class o{constructor(e,t){this.tabsContainer=document.querySelector(t),this.navbarContainer=document.querySelector(e),this.tabsContainer&&this.navbarContainer&&(this.dropdownMobile=this.navbarContainer.children[0],this.navDesktop=this.navbarContainer.children[1],this.menuItems=this.navDesktop.children,this.dropdownItems=this.dropdownMobile.children,this.tabs=this.tabsContainer.children,this.navDesktop.addEventListener("click",this.onClick,!1),this.dropdownMobile.addEventListener("change",this.onChange,!1),this.currentItem=0)}onClick=e=>{e.preventDefault();const t=("A"===e.target.nodeName?e.target.parentElement:e.target).dataset.panelId;this.updateDropdown(t),this.updateNav(t),this.updatePanel(t),this.currentItem=t};onChange=e=>{const t=e.target.selectedIndex;this.updateDropdown(t),this.updateNav(t),this.updatePanel(t),this.currentItem=t};updateNav=e=>{this.menuItems[this.currentItem].classList.remove("open"),this.menuItems[e].classList.add("open")};updateDropdown=e=>{this.dropdownMobile.options[e].selected=!0};updatePanel=e=>{let t=this.tabs[this.currentItem],n=this.tabs[e];t.classList.remove("open"),n.classList.add("open")}}class r extends t{constructor(e){super(e),this.mobileView,this.handleMobileChange(),window.addEventListener("resize",this.handleMobileChange)}spreadMenuDropdown=()=>{this.navbar&&this.menus.forEach((e=>{e.open=!0}))};handleSorterChange=()=>{document.querySelectorAll(".filter-bar__sorter-input-toggle").forEach((e=>{e.addEventListener("change",(e=>{document.getElementsByTagName("form")[0].submit()}))}))};handleMobileChange=()=>{const t="(max-width: "+e+")";this.mobileView=window.matchMedia(t),this.mobileView.matches?(document.removeEventListener("pointerdown",super.handleNonMenuClick),document.removeEventListener("keydown",super.handleEscapeKey),this.spreadMenuDropdown(this.navbar,this.menus),window.addEventListener("hashchange",this.handleScrollAndOverlay)):(this.menus.forEach((e=>{e.open&&e.removeAttribute("open")})),this.asyncDropdown(this.navbar),this.handleSorterChange())}}window.addEventListener("DOMContentLoaded",(function(){const e=new t(".navbar",!0);let i={};document.querySelectorAll(".content-slider").forEach(((e,t)=>{i[t]=new n(e)})),new o(".tabs-nav",".tabs"),new s(".hero-video__controller-wrapper",".hero-video__controller"),document.querySelector(".filter-bar__menu")&&new r(".filter-bar__menu"),e.asyncDropdown()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
