!function(){"use strict";new class{constructor(){let e=document.querySelector(".navbar");if(e){let t=e.querySelectorAll("details");t.forEach(((e,t,n)=>{e.ontoggle=t=>{e.open&&n.forEach((t=>{t!=e&&t.removeAttribute("open")}))}})),document.addEventListener("pointerdown",(function(n){e===n.target||e.contains(n.target)||t.forEach((e=>{e.open&&e.removeAttribute("open")}))})),document.addEventListener("keydown",(e=>{"Escape"==e.key&&t.forEach((e=>{e.open&&e.removeAttribute("open")}))}))}}},new class{constructor(){if(this.contentSlider=document.querySelector('[aria-label="gallery"]'),this.contentSlider){const e=this.contentSlider.querySelector(".content-slider__cards-list"),t=this.contentSlider.querySelector(".content-slider__controls"),n=this.contentSlider.querySelector(".content-block__upper"),l=t.querySelector(".content-slider__controls-left"),o=t.querySelector(".content-slider__controls-right");let r=n.getBoundingClientRect(),c=t.getBoundingClientRect();l.style.height=`${r.height}px`,o.style.height=`${r.height}px`;let s=c.top;t.style.top=r.top-s+"px",new ResizeObserver((e=>{for(let n of e)c=t.getBoundingClientRect(),r.top,c.top})).observe(this.contentSlider),l.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft-=500})),o.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft+=500})),t.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollLeft+=2*t.deltaY}))}}},new class{constructor(e){e&&(this.tabsPanel=e,this.tabsPanel.querySelectorAll(".tabs-panel__ul__li"),this.tabsPanel.querySelectorAll(".tabs-panel__ul__li"),console.log(panels),e.addEventListener("click",this.onClick))}onClick(){console.log("clicked"),console.log(this.panels)}}(document.querySelector(".tabs-panel"))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
