!function(){"use strict";new class{constructor(){let e=document.querySelector(".navbar");if(e){let t=e.querySelectorAll("details");t.forEach(((e,t,n)=>{e.ontoggle=t=>{e.open&&n.forEach((t=>{t!=e&&t.removeAttribute("open")}))}})),document.addEventListener("pointerdown",(function(n){e===n.target||e.contains(n.target)||t.forEach((e=>{e.open&&e.removeAttribute("open")}))})),document.addEventListener("keydown",(e=>{"Escape"==e.key&&t.forEach((e=>{e.open&&e.removeAttribute("open")}))}))}}},new class{constructor(){if(this.contentSlider=document.querySelector('[aria-label="gallery"]'),this.contentSlider){const e=this.contentSlider.querySelector(".content-slider__cards-list"),t=this.contentSlider.querySelector(".content-slider__controls"),n=this.contentSlider.querySelector(".content-block__upper"),o=t.querySelector(".content-slider__controls-left"),r=t.querySelector(".content-slider__controls-right");let l=n.getBoundingClientRect(),c=t.getBoundingClientRect();o.style.height=`${l.height}px`,r.style.height=`${l.height}px`;let i=c.top;t.style.top=l.top-i+"px",new ResizeObserver((e=>{for(let n of e)c=t.getBoundingClientRect(),l.top,c.top})).observe(this.contentSlider),o.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft-=500})),r.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft+=500})),t.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollLeft+=2*t.deltaY}))}}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
