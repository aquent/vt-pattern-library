!function(){"use strict";new class{constructor(){let e=document.querySelector(".navbar");if(e){let t=e.querySelectorAll("details");t.forEach(((e,t,o)=>{e.ontoggle=t=>{e.open&&o.forEach((t=>{t!=e&&t.removeAttribute("open")}))}})),document.addEventListener("pointerdown",(function(o){e===o.target||e.contains(o.target)||t.forEach((e=>{e.open&&e.removeAttribute("open")}))})),document.addEventListener("keydown",(e=>{"Escape"==e.key&&t.forEach((e=>{e.open&&e.removeAttribute("open")}))}))}}},new class{constructor(){if(this.contentSlider=document.querySelector('[aria-label="gallery"]'),this.contentSlider){const e=this.contentSlider.querySelector(".content-slider__cards-list"),t=this.contentSlider.querySelector(".content-slider__controls"),o=this.contentSlider.querySelector(".content-block__upper"),r=t.querySelector(".content-slider__controls-left"),n=t.querySelector(".content-slider__controls-right");let l=o.getBoundingClientRect(),c=t.getBoundingClientRect();r.style.height=`${l.height}px`,n.style.height=`${l.height}px`;let i=c.top;t.style.top=l.top-i+"px",new ResizeObserver((e=>{for(let o of e)c=t.getBoundingClientRect(),l.top,c.top})).observe(this.contentSlider),r.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft-=500})),n.addEventListener("click",(t=>{t.preventDefault(),e.scrollLeft+=500})),t.addEventListener("wheel",(t=>{t.preventDefault(),e.scrollLeft+=2*t.deltaY}))}}},new class{constructor(e,t){this.wrapper=document.querySelector(e),this.controller=document.querySelector(t),this.video=this.wrapper.getElementsByTagName("video")[0],this.#e()}#e(){this.wrapper.addEventListener("click",(()=>{this.video.paused?(this.controller.checked=!1,this.video.play()):(this.controller.checked=!0,this.video.pause())}))}}(".hero-video__controller-wrapper",".hero-video__controller")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
